#------------------------------------------------------
# Events and EventManager
class Event:
    """this is a superclass for any events that might be generated by an
    object and sent to the EventManager"""

    def __init__(self):
        self.name = "Generic Event"

    def __str__(self):
        return '<%s %s>' % (self.__class__.__name__,
                            id(self))

class GameStartRequest(Event):
    def __init__(self):
        self.name = "Game Start Request"

class TickEvent(Event):
    def __init__(self):
        self.name = "CPU Tick Event"

class QuitEvent(Event):
    def __init__(self):
        self.name = "Program Quit Event"

class NextTurnEvent(Event):
    def __init__(self):
        self.name = "Next Turn Event"

class PreFlopEvent(Event):
    def __init__(self, players):
        self.name = "Pre-Flop Event"
        self.players = players

class FlopEvent(Event):
    def __init__(self, card_list):
        self.name = "Flop Event"
        self.card_list = card_list

class TurnEvent(Event):
    def __init__(self, card):
        self.name = "Turn Event"
        self.card = card

class RiverEvent(Event):
    def __init__(self, card):
        self.name = "River Event"
        self.card = card

class ShowDownEvent(Event):
    def __init__(self, player, community_cards, card_list):
        self.name = "ShowDown"
        self.player = player
        self.community_cards = community_cards
        self.card_list = card_list

class InitializeRoundEvent(Event):
    def __init__(self):
        self.name = "Initialize Round"